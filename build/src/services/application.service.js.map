{"version":3,"file":"application.service.js","sourceRoot":"","sources":["../../../src/services/application.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAA4C;AAC5C,mCAAwC;AAExC;IAAA;IAkBA,CAAC;IAjBO,kCAAK,GAAX,UAAY,WAAgB;;;;;4BACR,qBAAM,uBAAa,CAAC,iBAAI,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,CAAC,EAAA;;wBAA7E,WAAW,GAAG,SAA+D;wBAEjF,IAAI,WAAW,IAAI,WAAW,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;4BACpE,sBAAO,EAAE,KAAK,EAAE,SAAS,EAAE,EAAC;yBAC7B;6BAAM;4BACL,sBAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAC;yBAC5B;;;;;KACF;IAEK,mCAAM,GAAZ,UAAa,WAAgB;;;;;;wBACrB,OAAO,GAAG,uBAAa,CAAC,iBAAI,CAAC,CAAC,MAAM,CACxC,WAAW,CACZ,CAAC;wBACa,qBAAM,uBAAa,CAAC,iBAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAA;;wBAAhD,MAAM,GAAG,SAAuC;wBACtD,sBAAO,MAAM,EAAA;;;;KACd;IACH,yBAAC;AAAD,CAAC,AAlBD,IAkBC;AAED,kBAAe,IAAI,kBAAkB,EAAE,CAAC","sourcesContent":["import { User } from \"../models/user.model\";\r\nimport { getRepository } from \"typeorm\";\r\n\r\nclass ApplicationService {\r\n  async login(requestBody: any) {\r\n    let currentUser = await getRepository(User).findOne({ email: requestBody.email });\r\n\r\n    if (currentUser && currentUser.comparePassword(requestBody.password)) {\r\n      return { flash: \"success\" };\r\n    } else {\r\n      return { flash: \"failed\" };\r\n    }\r\n  }\r\n\r\n  async signUp(requestBody: any) {\r\n    const newUser = getRepository(User).create(\r\n      requestBody\r\n    );\r\n    const result = await getRepository(User).save(newUser)\r\n    return result\r\n  }\r\n}\r\n\r\nexport default new ApplicationService();\r\n"]}